

1. Consider the following generalization of the Activity Selection Problem: 
You are given a set of n activities each with a start time si, a finish time fi, 
and a weight wi. Design a dynamic programming algorithm to find the weight of a set of 
non-conflicting activities with maximum weight.


PreProcess: Sort the time by the start time 

Definition: Let AS[i] = weight of the set of non-conflicting activities of maximum 
        weight drawing from activities 1 through i including i 

Base Case: AS[0] = 0 

Solution: Max(AS[i])  

Formula: AS[i] = Max(AS[j] + W[i] | F[j] < S[i])



Input: 2-3(3) 2-4(1) 3-7(4) 5-6(5) 5-8(1)


        2-3     2-4     3-7     5-6     5-8 
AS[i]   3       3       7       8       8         


AS[n] = Max ( AS[i-1], AS[i] + AS[k])
                 where Start(i) >= Finish(k) and k is the closest element travelling left from the current)
                 for 0 < i <= n